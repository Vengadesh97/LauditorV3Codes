<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-N596F8M" failures="0" tests="61" name="com.test.CreateMatterNegativeScenarioTest" time="12.835" errors="1" timestamp="2023-06-23T13:27:03 IST" skipped="60">
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="launchApplication" time="12.816">
    <error message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=114.0.5735.134)
Build info: version: &#039;4.7.0&#039;, revision: &#039;0a5b49d16f&#039;
System info: os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;18.0.2.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c0b510de218fadd2a139b6a35bbd03ec, findElement {using=id, value=id_email}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.134, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\VENGAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63663}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63663/devtoo..., se:cdpVersion: 114.0.5735.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c0b510de218fadd2a139b6a35bbd03ec" type="org.openqa.selenium.NoSuchWindowException">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=114.0.5735.134)
Build info: version: '4.7.0', revision: '0a5b49d16f'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c0b510de218fadd2a139b6a35bbd03ec, findElement {using=id, value=id_email}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.134, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\VENGAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63663}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63663/devtoo..., se:cdpVersion: 114.0.5735.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c0b510de218fadd2a139b6a35bbd03ec
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:541)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.sendKeys(Unknown Source)
at com.pom.LoginPage.loginApplication(LoginPage.java:35)
at com.base.BaseClass.launchApplication(BaseClass.java:121)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- launchApplication -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividuals" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividuals -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsWithTeamMembers" time="0.001">
    <skipped/>
  </testcase> <!-- clientsIndividualsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntity" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntity" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityWithDocuments" time="0.001">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClients" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClients -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClients" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClients -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClients" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClients -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsIndividuals" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsIndividuals -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsIndividualsWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsIndividualsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsIndividualsWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsIndividualsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsIndividualsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsIndividualsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsIndividuals" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsIndividuals -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsIndividualsWithTeamMembers" time="0.003">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsIndividualsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsIndividualsWithDocuments" time="0.002">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsIndividualsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsIndividualsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsIndividualsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsIndividuals" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsIndividuals -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsIndividualsWithTeamMembers" time="0.001">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsIndividualsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsIndividualsWithDocuments" time="0.001">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsIndividualsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsIndividualsWithTMandDocuments" time="0.001">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsIndividualsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsEntity" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsEntityWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsEntityWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandTempClientsEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandTempClientsEntityWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntitysandTempClientsEntity" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntitysandTempClientsEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsEntityWithTeamMembers" time="0.001">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsEntityWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsEntityandTempClientsEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsEntityandTempClientsEntityWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsEntity" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsEntityWithTeamMembers" time="0.001">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsEntityWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="clientsIndividualsandEntityandTempClientsEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- clientsIndividualsandEntityandTempClientsEntityWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividuals" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividuals -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsWithTeamMembers" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsEntity" time="0.001">
    <skipped/>
  </testcase> <!-- tempClientsEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsEntityWithTeamMembers" time="0.001">
    <skipped/>
  </testcase> <!-- tempClientsEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsEntityWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsEntityWithTMandDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsandEntity" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsandEntity -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsandEntityWithTeamMembers" time="0.005">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsandEntityWithTeamMembers -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsandEntityWithDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsandEntityWithDocuments -->
  <system-out/>
  <testcase classname="com.test.CreateMatterNegativeScenarioTest" name="tempClientsIndividualsandEntityWithTMandDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- tempClientsIndividualsandEntityWithTMandDocuments -->
  <system-out/>
</testsuite> <!-- com.test.CreateMatterNegativeScenarioTest -->
